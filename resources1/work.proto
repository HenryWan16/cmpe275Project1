syntax = "proto2";
option optimize_for = SPEED;
option java_package = "pipe.work";
import "common.proto";
import "election.proto";
import "pipe.proto";
message WorkState {
   required int32 enqueued = 1;
   required int32 processed = 2;
}
message Heartbeat {
   required WorkState state = 1;
}
/**
 * description of the work
 */
message Task {
    required int64 series_id = 1;
    required int32 seq_id = 2;
}
// These are messages to keep the network running (not to perform work)
message WorkMessage {
   required Header header = 1;
   required int64 secret = 2;
   /**
    * The actions (request or response) is
    * implicit through which data structure is in the payload.
    */
   oneof payload {
      Failure err = 3;
      bool ping = 4;
      Heartbeat beat = 5;
      Task task = 6;
      WorkState state = 7;
      Register register = 8;
      Vote verdict = 9;
   }
}
enum Verdict{
    VOTE = 1;
    REJECT = 2;
}
message Vote{
        required Verdict verdict = 1;
}
message Register {
        required string mode = 1;
        optional Node leader = 3;
}
